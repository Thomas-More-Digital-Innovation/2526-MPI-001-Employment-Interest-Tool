name: Deploy Test Production Environment 2

on:
  push:
    branches:
      - 'prod-test-env-2'
  workflow_dispatch:
    
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false
    
jobs:
  build-and-transfer:
    name: Build docker image and transfer to remote server
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Run docker buildx
    - name: Build Docker image
      run: |
        docker buildx build --platform linux/amd64 -t mpi-employment-interest-tool:latest .

    - name: Save Docker image to tar file
      run: |
        docker save mpi-employment-interest-tool:latest -o mpi-employment-interest-tool.tar

    - name: Upload Docker tar file as artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image-tar
        path: mpi-employment-interest-tool.tar

    # steps:
    # - name: Connect and run command on remote server
    #   uses: and-fm/cloudflared-ssh-action@v3
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     username: ${{ secrets.SSH_USERNAME }}
    #     private_key_filename: ${{ secrets.SSH_PRIVATE_KEY_FILENAME }}
    #     private_key_value: ${{ secrets.SSH_PRIVATE_KEY_VALUE }}
    #     port: 22
    #     service_token_id: ${{ secrets.SERVICE_TOKEN_ID }}
    #     service_token_secret: ${{ secrets.SERVICE_TOKEN_SECRET }}
    #     commands: |
    #       set -euo pipefail
    #       ROOT_PASSWORD="${{ secrets.ROOT_PASSWORD }}"

    #       APP_DIR=2526-MPI-001-Employment-Interest-Tool
    #       if [ -e "$APP_DIR/code/compose.test.prod.yml" ]; then
    #         echo "File exists."
    #         cd "$APP_DIR/code"
    #         # Stop the existing docker compose stack
    #         docker compose -f compose.test.prod.yml down

    #         # Docker builder prune
    #         docker builder prune --all -f
    #       else
    #         echo "File does not exist."
    #       fi

    #       cd /home/mpi

    #       echo "Removing existing files in $APP_DIR"
    #       echo "$ROOT_PASSWORD" | sudo -S rm -rf "$APP_DIR" || true
    #       mkdir -p "$APP_DIR"
    #       REPO_URL="https://github.com/${{ github.repository }}.git"
    #       BRANCH='${{ github.ref }}'
    #       BRANCH="${BRANCH#refs/heads/}"

    #       cd "$APP_DIR"

    #       echo "Cloning repository $REPO_URL (branch: $BRANCH) into $APP_DIR"
    #         git clone --depth 1 --branch "$BRANCH" "$REPO_URL" .
    #       cd code

    #       # Copy APP_KEY from /etc/laravel/app_key
    #       if [ -f /etc/laravel/app_key ]; then
    #         cat /etc/laravel/app_key >> .env.test.prod
    #       else
    #         echo "ERROR: /etc/laravel/app_key not found on server" >&2
    #         exit 2
    #       fi

    #       # Copy .env.test.prod to .env
    #       cp .env.test.prod .env
          
    #       # Export host UID/GID to docker compose environment
    #       export HOST_UID=$(id -u)
    #       export HOST_GID=$(id -g)

    #       # Start the docker compose stack
    #       docker compose -f compose.test.prod.yml up --build -d
